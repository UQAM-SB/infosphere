/**
 * _media-queries.scss
 * MEDIA QUERIES
 * Provient de: https://glennmccomb.com/articles/useful-sass-scss-media-query-mixins-for-bootstrap/
 * Par Glenn McComb
 *
 * Fonctions à utiliser pour créer des Media Queries
 */

// A map of breakpoints.
$breakpoints: (
	xs: 0px,
	sm: 568px,
	md: 768px,
	lg: 992px,
	xl: 1200px
);
// TODO: s'assurer que c'est les même grandeur que dans le fichier "bootstrap_custom.scss" / que tout fonctione bien


// RESPOND ABOVE
// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		$breakpoint-value: map-get($breakpoints, $breakpoint);
		@media (min-width: $breakpoint-value) {
			@content;
		}
	} @else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}


// RESPOND BELOW
// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		$breakpoint-value: map-get($breakpoints, $breakpoint);
		@media (max-width: ($breakpoint-value - 1)) {
			@content;
		}
	} @else {
		@warn 'Invalid breakpoint: #{$breakpoint}.';
	}
}


// RESPOND BETWEEN
// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
	@if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
		$lower-breakpoint: map-get($breakpoints, $lower);
		$upper-breakpoint: map-get($breakpoints, $upper);
		@media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
			@content;
		}
	} @else {
		@if (map-has-key($breakpoints, $lower) == false) {
			@warn 'Your lower breakpoint was invalid: #{$lower}.';
		}
		@if (map-has-key($breakpoints, $upper) == false) {
			@warn 'Your upper breakpoint was invalid: #{$upper}.';
		}
	}
}